{"version":3,"sources":["Components/notes.js","Components/Music.jsx","App.js","index.js"],"names":["noteModels","name","isWhite","value","qualities","label","generateTriad","root","Set","octaves","getRandomInt","max","Math","floor","random","Music","_useState","useState","_useState2","Object","slicedToArray","incorrectCountMap","setIncorrectCountMap","_useState3","notes","length","_useState4","correctRoot","setCorrectRoot","_useState5","_useState6","correctQuality","setCorrectQuality","_useState7","_useState8","notesPlayed","setNotesPlayed","_useState9","_useState10","correctCount","setCorrectCount","_useState11","_useState12","incorrectCount","setIncorrectCount","updateIncorrectCountMap","currentIncorrectCountMap","triadLabel","concat","useEffect","setTimeout","triadSet","notesPlayedSet","map","n","size","current","_step","_iterator","_createForOfIteratorHelper","s","done","note","has","err","e","f","synth","Tone","toDestination","react_default","a","createElement","className","noteButtons","forEach","o","combinedClasses","some","np","octave","join","push","key","onClick","triggerAttackRelease","toConsumableArray","objectSpread","renderNotes","entries","_ref","_ref2","count","App","Music_Music","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f871cff6.chunk.js","sourcesContent":["const noteModels = [\n  { name: \"C\", isWhite: true, value: 0 },\n  { name: \"C#\", isWhite: false, value: 1 },\n  { name: \"D\", isWhite: true, value: 2 },\n  { name: \"D#\", isWhite: false, value: 3 },\n  { name: \"E\", isWhite: true, value: 4 },\n  { name: \"F\", isWhite: true, value: 5 },\n  { name: \"F#\", isWhite: false, value: 6 },\n  { name: \"G\", isWhite: true, value: 7 },\n  { name: \"G#\", isWhite: false, value: 8 },\n  { name: \"A\", isWhite: true, value: 9 },\n  { name: \"A#\", isWhite: false, value: 10 },\n  { name: \"B\", isWhite: true, value: 11 },\n];\n\nexport const generateMajorTriad = (root) => {\n  return new Set([\n    root.value,\n    noteModels[(root.value + 4) % 12].value,\n    noteModels[(root.value + 7) % 12].value,\n  ]);\n};\n\nexport const generateMinorTriad = (root) => {\n  return new Set([\n    root.value,\n    noteModels[(root.value + 3) % 12].value,\n    noteModels[(root.value + 7) % 12].value,\n  ]);\n};\n\nexport const generateDiminishedTriad = (root) => {\n  return new Set([\n    root.value,\n    noteModels[(root.value + 3) % 12].value,\n    noteModels[(root.value + 6) % 12].value,\n  ]);\n};\n\nexport const generateAugmentedTriad = (root) => {\n  return new Set([\n    root.value,\n    noteModels[(root.value + 4) % 12].value,\n    noteModels[(root.value + 8) % 12].value,\n  ]);\n};\n\nexport const qualities = [\n  { label: \"Major\", generateTriad: generateMajorTriad },\n  { label: \"Minor\", generateTriad: generateMinorTriad },\n  { label: \"Diminished\", generateTriad: generateDiminishedTriad },\n  { label: \"Augmented\", generateTriad: generateAugmentedTriad },\n];\n\nexport default noteModels;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./Music.css\";\nimport * as Tone from \"tone\";\nimport notes, { qualities } from \"./notes\";\n\nconst octaves = [3, 4];\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * max);\n};\n\nexport default function Music() {\n  const [incorrectCountMap, setIncorrectCountMap] = useState({});\n  const [correctRoot, setCorrectRoot] = useState(\n    notes[getRandomInt(notes.length)]\n  );\n  const [correctQuality, setCorrectQuality] = useState(\n    qualities[getRandomInt(qualities.length)]\n  );\n  const [notesPlayed, setNotesPlayed] = useState([]);\n  const [correctCount, setCorrectCount] = useState(0);\n  const [incorrectCount, setIncorrectCount] = useState(0);\n\n  const updateIncorrectCountMap = () => {\n    setIncorrectCountMap((currentIncorrectCountMap) => {\n      const triadLabel = `${correctRoot.name} ${correctQuality.label}`;\n      if (triadLabel in currentIncorrectCountMap)\n        currentIncorrectCountMap[triadLabel]++;\n      else currentIncorrectCountMap[triadLabel] = 1;\n\n      return currentIncorrectCountMap;\n    });\n  };\n\n  useEffect(() => {\n    if (notesPlayed.length === 3) {\n      setTimeout(() => {\n        setNotesPlayed([]);\n        setCorrectRoot(notes[getRandomInt(notes.length)]);\n        setCorrectQuality(qualities[getRandomInt(qualities.length)]);\n      }, 1000);\n      const triadSet = correctQuality.generateTriad(correctRoot);\n      const notesPlayedSet = new Set(notesPlayed.map((n) => n.value));\n      if (notesPlayedSet.size !== triadSet.size) {\n        setIncorrectCount((current) => current + 1);\n        updateIncorrectCountMap();\n        return;\n      }\n      for (let note of notesPlayedSet) {\n        if (!triadSet.has(note)) {\n          setIncorrectCount((current) => current + 1);\n          updateIncorrectCountMap();\n          return;\n        }\n      }\n      setCorrectCount((current) => current + 1);\n    }\n  }, [notesPlayed]);\n\n  const synth = new Tone.Synth().toDestination();\n  const playNote = (note, octave) => {\n    synth.triggerAttackRelease(`${note}${octave}`, \"8n\");\n  };\n\n  const renderNotes = () => {\n    let noteButtons = [];\n    octaves.forEach((o) => {\n      notes.forEach((n) => {\n        const firstClass = n.isWhite ? \"white-key\" : \"black-key\";\n        // if (we need a second class) then add that class to the 'keyClass' string\n        const maybeSecondClass = notesPlayed.some((np) => {\n          return np.value === n.value && np.octave === o;\n        })\n          ? \"pressed-key\"\n          : \"\";\n\n        // 3rd option\n        // let combinedClasses = n.isWhite ? \"white-key\" : \"black-key\";\n        // if (maybeSecondClass)\n        //   combinedClasses = `${combinedClasses} ${maybeSecondClass}`;\n\n        // 4th option\n        const combinedClasses = [firstClass, maybeSecondClass].join(\" \");\n\n        // const combinedClasses = firstClass + \" \" + maybeSecondClass;\n        // const combinedClasses = `${firstClass} ${maybeSecondClass}`;\n\n        noteButtons.push(\n          <button\n            key={`${n.name}${o}`}\n            className={combinedClasses}\n            onClick={() => {\n              playNote(n.name, o);\n\n              setNotesPlayed([...notesPlayed, { ...n, octave: o }]);\n            }}\n          >\n            {n.name}\n          </button>\n        );\n      });\n    });\n\n    return noteButtons;\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"app-div\">\n        <div className=\"app-title\">\n          <h1>Musical Keyboard Game</h1>\n        </div>\n        <div className=\"counter-div\">\n          <div className=\"correct-counter\">\n            <p>Correct: {correctCount}</p>\n          </div>\n          <div className=\"incorrect-counter\">\n            <p>Incorrect: {incorrectCount}</p>\n          </div>\n        </div>\n        <div className=\"keyboard\">{renderNotes()}</div>\n        <div className=\"quiz-text\">\n          <h3>Play the correct triad:</h3>\n          <h2>\n            {correctRoot.name} {correctQuality.label}\n          </h2>\n        </div>\n        <h4>Needs more practice:</h4>\n        <div className=\"quiz-results\">\n          <div className=\"results-row\">\n            <div>\n              <h5>Chord</h5>\n            </div>\n            <div>\n              <h5>Incorrect Count</h5>\n            </div>\n          </div>\n          {Object.entries(incorrectCountMap).map(([triadLabel, count]) => (\n            <div key={triadLabel}>\n              <div className=\"results-row\">\n                <div>\n                  <p>{triadLabel}</p>\n                </div>\n                <div>\n                  <p>{count}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Music from \"./Components/Music.jsx\";\n\nfunction App() {\n  return <Music />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}